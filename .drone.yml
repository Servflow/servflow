kind: pipeline
type: docker
name: default

platform:
  os: linux

services:
  - name: cache
    image: redis
#  - name: database
#    image: postgres
#    environment:
#      POSTGRES_PASSWORD: password

trigger:
  branch:
    - main
  event:
    - push
    - pull_request

steps:
  - name: debug-docker
    image: docker
    privileged: true
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - docker version
      - docker info

  - name: wait-for-redis
    image: redis
    commands:
      - until redis-cli -h cache ping; do sleep 1; done

  #  - name: wait-for-postgres
  #    image: postgres
  #    commands:
  #      - until pg_isready -h database -U postgres; do sleep 1; done

  - name: code-quality
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - go install honnef.co/go/tools/cmd/staticcheck@2025.1.1
      - gofmt -d .
      - if [ "$(gofmt -l .)" ]; then echo "Code not formatted properly"; exit 1; fi
      - staticcheck ./...

  - name: test
    image: golang
    privileged: true
    depends_on:
      - wait-for-redis
      - code-quality
    environment:
      DATABASE_URL: "user=postgres password=password host=database port=5432 dbname=postgres sslmode=disable"
      TESTCONTAINERS_RYUK_DISABLED: true
    volumes:
      - name: deps
        path: /go
      - name: shared-data
        path: /shared
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - go test ./...

  - name: e2e-tests
    image: docker:27.3.1
    privileged: true
    depends_on:
      - wait-for-redis
      - code-quality
    commands:
      - apk add --no-cache bash curl jq python3
      - dockerd & # Start the Docker daemon
      - sleep 5 # Wait for the daemon to initialize
      - docker info
      - cd testsuite && bash ./runtest.sh

volumes:
  - name: deps
    host:
      path: /var/lib/cache/drone/go
  - name: shared-data
    temp: {}
  - name: docker-sock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: push prod

trigger:
  event:
    - tag

platform:
  os: linux

steps:
  - name: build-gen-tag
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - echo "servflow/servflow:$DRONE_TAG"
      - echo -n "servflow/servflow:$DRONE_TAG" > .image-tag
      - echo -n "$DRONE_TAG" > .version

  - name: code-quality
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - go install honnef.co/go/tools/cmd/staticcheck@2025.1.1
      - gofmt -d .
      - if [ "$(gofmt -l .)" ]; then echo "Code not formatted properly"; exit 1; fi
      - staticcheck ./...

  - name: goreleaser
    image: goreleaser/goreleaser
    privileged: true
    depends_on:
      - build-gen-tag
      - code-quality
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_REGISTRY: ""
    commands:
      - goreleaser release

volumes:
  - name: deps
    host:
      path: /var/lib/cache/drone/go
  - name: docker-sock
    host:
      path: /var/run/docker.sock
