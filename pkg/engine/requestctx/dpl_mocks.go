// Code generated by MockGen. DO NOT EDIT.
// Source: dpl.go
//
// Generated by this command:
//
//	mockgen -source dpl.go -destination dpl_mocks.go -package requestctx
//

// Package requestctx is a generated GoMock package.
package requestctx

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSecretStore is a mock of SecretStore interface.
type MockSecretStore struct {
	ctrl     *gomock.Controller
	recorder *MockSecretStoreMockRecorder
}

// MockSecretStoreMockRecorder is the mock recorder for MockSecretStore.
type MockSecretStoreMockRecorder struct {
	mock *MockSecretStore
}

// NewMockSecretStore creates a new mock instance.
func NewMockSecretStore(ctrl *gomock.Controller) *MockSecretStore {
	mock := &MockSecretStore{ctrl: ctrl}
	mock.recorder = &MockSecretStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretStore) EXPECT() *MockSecretStoreMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockSecretStore) GetSecret(key string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", key)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockSecretStoreMockRecorder) GetSecret(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockSecretStore)(nil).GetSecret), key)
}
