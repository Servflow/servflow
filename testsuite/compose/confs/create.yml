id: create
http:
  listenPath: /notes
  method: POST
  next: conditional.validate
conditionals:
  validate:
    expression: |
      {{ and
      (notempty (param "title") "Title")
      (notempty (param "content") "Content")
      }}
    onTrue: action.authenticate
    onFalse: response.400
actions:
  authenticate:
    type: authenticate
    config:
      integration_id: mongo
      database_field: email
      jwt_key: "test"
      token: '{{ header "Authorization" }}'
      collection: "users"
    next: action.saveItem
    fail: response.invalidAuth
  saveItem:
    type: store
    config:
      integrationID: mongo
      table: notes
      fields:
        title: '{{ param "title" }}'
        content: '{{ param "content" }}'
        owner: "{{ .variable_actions_authenticate }}"
    next: response.success
responses:
  "400":
    type: template
    template: |
      {"errors": {{ .error }}}
    code: 400
  invalidAuth:
    type: template
    template: |
      { "error": "invalid auth token"}
    code: 401
  success:
    type: template
    code: 200
    template: |
      {
        "status" : "success",
        "data" : {{ jsonout .variable_actions_saveItem}}
      }
